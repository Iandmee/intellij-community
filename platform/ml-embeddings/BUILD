load("//tools/base/bazel:bazel.bzl", "iml_module")

# managed by go/iml_to_build
iml_module(
    name = "intellij.platform.ml.embeddings",
    srcs = ["src"],
    iml_files = ["intellij.platform.ml.embeddings.iml"],
    javacopts_from_jps = ["-Xlint:unchecked"],
    resources = ["resources"],
    visibility = ["//visibility:public"],
    exports = ["//m2:ai.grazie.emb"],
    # do not sort: must match IML order
    deps = [
        "//intellij-community:kotlin-stdlib",
        "//intellij-community:jackson",
        "//intellij-community:jackson-databind",
        "//intellij-community:jackson-module-kotlin",
        "//m2:ai.grazie.utils.common",
        "//m2:ai.grazie.utils.ki",
        "//m2:ai.grazie.model.nlp.encoder",
        "//m2:ai.grazie.emb",
        "//m2:ai.grazie.nlp.encoder",
        "//m2:ai.grazie.nlp.encoder.bert.uncased",
        "//m2:kinference.api.jvm",
        "//m2:kinference.core.jvm",
        "//m2:kinference.ndarray.api.jvm",
        "//m2:kinference.ndarray.core.jvm",
        "//m2:kinference.ir.jvm",
        "//m2:kinference.utils",
        "//m2:kinference.serializer.protobuf.jvm",
        "//m2:kinference.model.profiler.jvm",
        "//m2:kinference.common.utils.jvm",
        "//m2:kinference.serializer.tiled.jvm",
        "//m2:kinference.logger.jvm",
        "//m2:kinference.primitives.annotations.jvm",
        "//m2:squareup.okio.jvm",
        "//m2:squareup.wire.runtime.jvm",
        "//intellij-community/platform/core-api:intellij.platform.core[module]",
        "//intellij-community/platform/projectModel-impl:intellij.platform.projectModel.impl[module]",
        "//intellij-community/platform/ide-core:intellij.platform.ide.core[module]",
        "//intellij-community/platform/platform-impl:intellij.platform.ide.impl[module]",
        "//intellij-community/platform/diagnostic/telemetry:intellij.platform.diagnostic.telemetry[module]",
        "//intellij-community:opentelemetry",
    ],
)
